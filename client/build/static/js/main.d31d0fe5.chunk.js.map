{"version":3,"sources":["assets/search.png","assets/logo.png","components/Topbar.js","assets/dmoj.png","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","textYellow","color","fontSize","textGray","bar","display","alignItems","flexDirection","width","height","backgroundColor","titleWrap","marginLeft","searchWrap","borderWidth","borderStyle","borderColor","borderRadius","searchBox","border","background","outline","img","marginRight","logo","App","prop","useState","user","setUser","step","setStep","classes","isMounted","useRef","useEffect","current","console","log","postBody","name","sub","fetch","method","body","JSON","stringify","headers","then","res","json","data","className","src","Logo","alt","Search","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","leftContainer","rightContainer","contentBox","btnbase","h1","marginTop","fontWeight","rank","h3","h3Left","float","link","textDecoration","rowBox","scrollBox","overflowY","contestBox","borderBottom","transform","ratingGain","show","setShow","object","id","username","points","performance_points","problem_count","solved_problems","rating","organizations","contests","contestCount","subCount","contestData","performance","ratingOld","ratingChange","contest","place","percentile","date","setData","colorRating","setColorRating","setContestData","handleColorRating","Topbar","input","ButtonBase","DMOJ","style","toFixed","href","map","obj","overflow","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d31d0fe5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.d706c28e.png\";","export default __webpack_public_path__ + \"static/media/logo.65440c93.png\";","import {useState, useEffect, useRef} from 'react'\r\nimport { makeStyles} from \"@material-ui/core\";\r\nimport Search from '../assets/search.png';\r\nimport Logo from '../assets/logo.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    textYellow: {\r\n        color: \"#FCDB05\",\r\n        fontSize: \"30\",\r\n    },\r\n    textGray: {\r\n        color: \"#AAAAAA\",\r\n        fontSize: \"30\",\r\n    },\r\n    bar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n        height: \"100px\",\r\n        backgroundColor: \"#1f2940\",\r\n    },\r\n    titleWrap: {\r\n        marginLeft: \"10%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        width: \"27%\",\r\n        height: \"100%\",\r\n        \r\n    },\r\n    searchWrap: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        borderWidth: \"4px\",\r\n        borderStyle: \"solid\",\r\n        width: \"40%\",   \r\n        height: \"45px\",\r\n        borderColor: \"#605D5D\",\r\n        borderRadius: 10,\r\n    },\r\n    searchBox: {\r\n        borderWidth: \"0px\",\r\n        width: \"100%\",\r\n        border: \"none\",\r\n        background: \"transparent\",\r\n        color: 'white',\r\n        fontSize: 20,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        '&:focus' : {\r\n            outline: \"none\",\r\n        }\r\n    },\r\n    img: {\r\n        height: \"50%\",\r\n        marginLeft: \"10px\",\r\n        marginRight: \"10px\",\r\n    },\r\n    logo: {\r\n        height: \"90px\",\r\n\r\n    },\r\n    \r\n}))\r\nfunction App({prop}) {\r\n    const [user, setUser] = useState('');\r\n    const [step, setStep] = useState(1);\r\n    const [obj, setObj] = useState(null);\r\n\r\n    const search = evt => {\r\n        if(evt.key === \"Enter\"){\r\n            console.log('user: ' + user)\r\n            setStep(step+1)\r\n            \r\n        }\r\n    }\r\n    const classes = useStyles();\r\n\r\n    const isMounted = useRef(false);\r\n    useEffect (() => {\r\n\r\n        if(isMounted.current){\r\n            console.log(\"re-render\")\r\n\r\n            const postBody = {\r\n                name: `${user}`,\r\n                user: `https://dmoj.ca/api/v2/user/${user}`,\r\n                sub: `https://dmoj.ca/api/user/submissions/${user}`\r\n\r\n            }\r\n            //backend server call\r\n            fetch('/api/user', {\r\n                method: \"POST\",\r\n                body: JSON.stringify(postBody),\r\n                headers: { 'Content-Type': 'application/json'}\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    prop(data)\r\n                })\r\n        }\r\n        else {\r\n            isMounted.current = true;\r\n        }\r\n    }, [step])\r\n        \r\n\r\n\r\n\r\n    return (\r\n        <div className = {classes.bar}>\r\n            <div className = {classes.titleWrap}>\r\n                <img className = {classes.logo} src = {Logo} alt = \"logo\"></img>\r\n                {/* <h1 className = {classes.textYellow}>DM</h1><h1 className = {classes.textGray}>OJ</h1><h1 className = {classes.textYellow}>ST</h1><h1 className = {classes.textGray}>ATS</h1> */}\r\n            </div>\r\n\r\n            <div className = {classes.searchWrap}>\r\n\r\n            <img src = {Search} alt = \"search\" className = {classes.img}/>\r\n\r\n            <input\r\n                type = \"text\"\r\n                className = {classes.searchBox}\r\n                placeholder = \"Search for a user...\"\r\n                onChange = {e => setUser(e.target.value)}\r\n                onKeyPress = {search}\r\n\r\n            >\r\n            </input>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/dmoj.620a2bae.png\";","import './App.css';\nimport Topbar from './components/Topbar'\nimport { makeStyles, ButtonBase, Button} from \"@material-ui/core\";\nimport DMOJ from './assets/dmoj.png';\nimport {useState, useEffect, useRef} from 'react'\nimport React from 'react'\nimport RadarChart from 'react-svg-radar-chart';\nimport './Radar.css';\nconst useStyles = makeStyles((theme) => ({\n\n    leftContainer: {\n      marginLeft: \"10%\",\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      flexDirection: \"column\",\n      width: \"27%\",\n        \n    },\n    rightContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"53%\",\n\n    },\n    contentBox: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n    btnbase: {\n      width: \"50%\",\n      backgroundColor: \"#3B3B3B\",\n      borderRadius: 10,\n    },\n    img: {\n      width: \"100%\",\n    },\n    h1: {\n      color: \"white\",\n      fontSize: \"34px\",\n      marginTop: \"-9px\",\n      fontWeight: \"normal\",\n    },\n    rank: {\n      fontSize: \"24px\",\n      marginTop: \"-20px\",\n      fontWeight: \"normal\",\n    },\n\n    h3: {\n      color: \"white\",\n      fontSize: \"20px\",\n      fontWeight: \"normal\",\n    },\n    h3Left: {\n      color: \"white\",\n      fontSize: \"20px\",\n      fontWeight: \"normal\",\n      float: \"left\",\n      marginRight: \"7px\",\n    },\n    link: {\n      textDecoration: \"none\",\n      color: \"#889BCB\",\n    },\n    rowBox: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      height: \"50px\",\n    },\n    scrollBox: {\n      overflowY: \"scroll\",\n      width: \"100%\",\n      height: \"500px\",\n      \n      '&::-webkit-scrollbar' :{\n        display: \"none\",\n      },\n\n    },\n    \n    contestBox: {\n      width: \"98%\",\n      height: \"175px\",\n      borderBottom: \"2px solid white\",\n      backgroundColor: \"#1f2940\",\n      display: \"flex\",\n      flexDirection : \"column\",\n      '&:hover' : {\n          \n        transform: \"scale(1.01)\",\n      }\n\n    },\n\n    ratingGain: {\n      backgroundColor: \"#53F23F\",\n      borderRadius: 20,\n      width: \"100px\",\n      height: \"100px\",\n      marginRight: \"30px\",\n    },\n\n    link: {\n      textDecoration: \"none\",\n      color: \"none\",\n    },\n\n}))\nfunction App() {\n  const classes = useStyles();\n\n  const [show, setShow] = useState(false);\n  const defaultOptions = {\n    axes: true,\n    captions: true,\n    dots: true,\n    scales: 3, \n  }\n  const radar = [\n    {\n      data: {\n        adhoc: .65,\n        graph: .9,\n        dp: .7,\n        string: .4,\n        math: .7,\n        greedy: .5,\n        data: .6,\n      },\n      meta: { color: 'blue' }\n    },\n\n  ];\n\nconst captions = {\n    // columns\n    adhoc: 'Ad Hoc',\n    graph: 'Graph Theory',\n    dp: 'DP',\n    string: 'String Algorithms',\n    math: 'Math',\n    greedy: 'Greedy ',\n    data: 'Data Structures',\n  };\n  const [data, setData] = useState({\n    object : {\n        id: \"<user id>\",\n        username: \"<user username>\",\n        points: \"<user points>\",\n        performance_points: \"<user performance points>\",\n        problem_count: \"<number of problems the user has solved>\",\n        solved_problems: [\n            \"<list of problem code>\"\n        ],\n        rank: \"<user display rank>\",\n        rating: \"<user rating>\",\n        organizations: [\n            \"<list of organization id>\"\n        ],\n        contests: [\n            {\n                \"key\": \"<contest key>\",\n                \"score\": \"<user score>\",\n                \"cumulative_time\": \"<user cumulative time, dependant on the contest format>\",\n                \"rating\": \"<user rating after this contest, or null if not rated>\",\n                \"raw_rating\": \"<user raw rating after this contest, or null if not rated>\",\n                \"performance\": \"<user performance, or null if not rated>\"\n            }\n        ],\n        contestCount: \"<(custom attribute) number of rated contests>\",\n        subCount: \"<(custom attribute) total submission count\",\n        contestData: [\n            {\n                performance : 0,\n                ratingOld: \"\",\n                rating: \"\",\n                ratingChange: 0,\n                contest: \"\",\n                place: \"\",\n                percentile: 0,\n                date: \"\",\n                name: \"\",\n            }\n    \n        ],\n\n    },\n  });\n  const [colorRating, setColorRating] = useState('');\n  const [contestData, setContestData] = useState(['2','2','2']);\n  const receiveData = (input) => {\n\n    console.log('data received ' + JSON.stringify(input.object.username));\n    var rank = input.object.rating\n\n    setColorRating(handleColorRating(rank))\n\n\n    setData(input);\n\n    setContestData(input.object.contestData);\n\n\n    setShow(true);   \n\n  }\n  function handleColorRating(rank){\n    if(rank === null )return(\"#fff\");\n    if(rank != null && rank < 1000) return(\"#b1c9dc\");\n    if(rank >= 1000 && rank < 1300) return(\"#46ff46\");\n    if(rank >= 1300 && rank < 1600) return(\"#5398ff\");\n    if(rank >= 1600 && rank < 1900) return(\"#ff53ff\");\n    if(rank >= 1900 && rank < 2400) return(\"#fffc1a\");\n    if(rank >= 2400 ) return(\"#ff0c0c\");\n\n  };\n  var rating = data.object.rating === null ? \"null\" : data.object.rating\n  var sub = `https://dmoj.ca/submissions/user/${data.object.username}`\n\n  return (\n    \n    <div>\n      \n      <Topbar prop = {receiveData} />\n      <div className = \"App-header\">\n        <br></br>\n        <div className = {classes.contentBox}>\n\n          {\n            show === true && \n            <div className = {classes.leftContainer}>\n                <ButtonBase className = {classes.btnbase}><img src = {DMOJ} alt = \"DMOJ\" className = {classes.img}></img></ButtonBase>\n\n\n                  <div>\n\n                    <h3 className = {classes.h3Left} >Elo rating: </h3> <h3 className = {classes.h3Left} style={{color: colorRating, fontWeight: \"bold\"}}>{rating}</h3> \n                    <h3 className = {classes.h3}>Problems solved: {data.object.problem_count}</h3>\n                    <h3 className = {classes.h3}>Contests written: {data.object.contestCount}</h3>\n                    <h3 className = {classes.h3}>Total Points: {data.object.points.toFixed(0)}</h3>\n                    <h3 className = {classes.h3}>Adjusted Points: {data.object.performance_points.toFixed(0)} </h3>\n                    <h3 className = {classes.h3}>Total submissions: {data.object.subCount}</h3>\n                    <a href = {sub} target=\"_blank\" className = {classes.link}><h3 className = {classes.h3} style={{color:\"#889BCB\"}}>View submissions</h3></a>\n\n                  </div>\n                \n\n            </div>\n          \n          }\n\n          {\n              show === true &&\n\n              <div className = {classes.rightContainer}>\n\n                    <h1 style={{fontWeight: \"bold\"}} className = {classes.h1}>{data.object.username}</h1>\n\n                    {/* title */}\n                    {\n                      rating === \"null\" && \n                      <h2 className = {classes.rank} style={{color:\"white\"}}>Unrated</h2> \n                                    \n                    }\n                    {\n                      rating <1000 && rating != \"null\" && \n                      <h2 className = {classes.rank} style={{color:\"#b1c9dc\"}}>Newbie</h2>\n                    }\n                    {\n                      rating >=1000 && rating <1300 &&\n                      <h2 className = {classes.rank} style={{color:\"#46ff46\"}}>Amateur</h2>\n                    }   \n                    {\n                      rating >=1300 && rating <1600 &&\n                      <h2 className = {classes.rank} style={{color:\"#5398ff\"}}>Expert</h2>\n                    }              \n                    {\n                      rating >=1600 && rating <1900 &&\n                      <h2 className = {classes.rank} style={{color:\"#ff53ff\"}}>Candidate Master</h2>\n                    }              \n                    {\n                      rating >=1900 && rating <2399 &&\n                      <h2 className = {classes.rank} style={{color:\"#fffc1a\"}}>Master</h2>\n                    }            \n                    {\n                      rating >=2400 && rating <3000 &&\n                      <h2 className = {classes.rank} style={{color:\"#ff0c0c\"}}>Grandmaster</h2>\n                    }                           \n                    {\n                      rating >=3000 &&\n                      <h2 className = {classes.rank} style={{color:\"#ff0c0c\"}}>Legendary Grandmaster</h2>\n                    }              \n\n                  {\n                    data.object.contestCount > 0 &&\n                    <h1 style={{fontWeight: \"normal\", fontSize: \"23px\"}}>Contest History</h1>\n                  }\n                  {\n                    data.object.contestCount == 0 && \n                    <h1 style={{fontWeight: \"normal\", fontSize: \"23px\"}}>No contest participation</h1>                \n                  }\n                  \n\n                  { data.object.contestCount > 0 && \n\n                    \n                  \n                    <div className = {classes.scrollBox}>\n                    \n                      {contestData.map(obj =>\n                        \n                        <a className = {classes.link} href = {`https://dmoj.ca/contest${obj.link}`} target = \"_blank\">\n                        <div className = {classes.contestBox}>\n\n                          <div style = {{marginLeft: \"30px\", marginRight: \"30px\"}}>\n\n                            {/* subtitle box */}\n                            <div style = {{alignItems : \"baseline\", overflow:\"hidden\", display:\"flex\", height:\"70px\", width: \"100%\", marginTop: \"-20px\"}}>\n                              <h3 style = {{color:\"#5081E4\", float: \"left\"}}>{obj.name} &nbsp;</h3>\n                              <h5 style = {{color:\"#5081E4\", float: \"left\"}}>{obj.date}</h5>\n                            </div>\n\n                            <br></br>\n\n                            {/* content */}\n                            <div style = {{ height: \"100px\", width: \"100%\", marginTop: \"-25px\", display: \"flex\", flexDirection: \"row\"}}>\n                                {\n                                  obj.ratingChange >=0 && \n                                  <ButtonBase className = {classes.ratingGain}>\n                                    <h1 style = {{color: \"black\"}}>+{obj.ratingChange}</h1>\n                                  </ButtonBase>\n                                }\n                                {\n                                  obj.ratingChange <0 && \n                                  <ButtonBase className = {classes.ratingGain} style = {{backgroundColor:\"#ed4420\"}}>\n                                    <h1 style = {{color: \"black\"}}>{obj.ratingChange}</h1>\n                                  </ButtonBase>\n                                }            \n                                <div style = {{height: \"100px\", width: \"350px\", marginTop: \"-2px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\"}}>\n                                  <div style = {{backgroundColor: \"#165172\", borderRadius: 10, height: \"47px\", display: \"flex\", alignItems: \"center\"}}> \n                                    <h5 style = {{color: \"white\", fontWeight: \"normal\", float: \"left\", marginLeft: \"10px\"}}>Performance: </h5><h5 style = {{fontWeight: \"bold\",marginLeft:\"5px\", float: \"left\", color: handleColorRating(obj.performance) }}>{obj.performance} </h5>\n                                  \n                                  </div>\n\n\n                                  <div style = {{backgroundColor: \"#165172\", borderRadius: 10, height: \"47px\", display: \"flex\", alignItems: \"center\"}}> \n                                    <h5 style = {{color: \"white\", fontWeight: \"normal\", float: \"left\", marginLeft: \"10px\"}}>Percentile: {obj.percentile}%</h5>\n                                  \n                                  </div>\n\n                                </div>\n                            </div>\n\n                          </div>\n\n                        </div>\n                        </a>\n                        \n                        )\n                    \n                    }\n                    </div>\n\n                  \n                  }\n                    \n\n\n\n\n                  \n              </div>\n          }\n          \n        </div>\n      </div>\n        \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}